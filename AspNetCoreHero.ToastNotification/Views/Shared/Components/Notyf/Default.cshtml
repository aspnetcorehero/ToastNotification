@model AspNetCoreHero.ToastNotification.Notyf.NotyfViewModel
@using AspNetCoreHero.ToastNotification.Enums

<link rel="stylesheet" href="~/libs/font-awesome.min.css" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
<link rel="stylesheet" href="~/notyf.min.css">

<script src="~/notyf.min.js"></script>

<script>
    const notyf = new Notyf(@Html.Raw(Model.Configuration));
</script>

@{
    @if (Model.Notifications != null)
    {
        foreach (var notification in Model.Notifications)
        {
            switch (notification.Type)
            {
                case ToastNotificationType.Success:
                    <script>
                       $(document).ready(function () {toastNotifySuccess('@Html.Raw(notification.Message)','@Html.Raw(notification.Duration)');});
                    </script>
                    break;
                case ToastNotificationType.Error:
                    <script>
                        $(document).ready(function () { toastNotifyError('@Html.Raw(notification.Message)','@Html.Raw(notification.Duration)');});
                    </script>
                    break;
                case ToastNotificationType.Warning:
                    <script>
                        $(document).ready(function () { toastNotifyWarning('@Html.Raw(notification.Message)','@Html.Raw(notification.Duration)');});
                    </script>
                    break;
                case ToastNotificationType.Information:
                    <script>
                        $(document).ready(function () { toastNotifyInformation('@Html.Raw(notification.Message)','@Html.Raw(notification.Duration)');});
                    </script>
                    break;

                case ToastNotificationType.Custom:
                    <script>
                        $(document).ready(function ()
                        {
                            toastNotifyCustom(
                                '@Html.Raw(notification.Message)',
                                '@Html.Raw(notification.Duration)',
                                '@Html.Raw(notification.BackgroundColor)',
                            '@Html.Raw(notification.Icon)');
                        });
                    </script>
                    break;
            }
        }
    }
}

<script type="text/javascript">

    function toastNotifySuccess(message, duration) {
        if (duration) { notyf.success({ message: message, duration: duration }); }
        else { notyf.success({ message: message }); }
    }
    function toastNotifyError(message, duration) {
        if (duration) { notyf.error({ message: message, duration: duration }); }
        else { notyf.error({ message: message }); }
    }
    function toastNotifyWarning(message, duration) {
        if (duration) { notyf.open({ type: 'warning', message: message, duration: duration }); }
        else { notyf.open({ type: 'warning', message: message }); }

    }
    function toastNotifyInformation(message, duration) {
        if (duration) { notyf.open({ type: 'info', message: message, duration: duration }); }
        else { notyf.open({ type: 'info', message: message }); }

    }
    function toastNotifyCustom(message, duration, color, iconClass) {

        var lightOrDarkClassName = pickTextColorBasedOnBgColorAdvanced(color);
        var iconClassName = iconClass.concat(' ').concat(lightOrDarkClassName);
        if (duration) {
            notyf.open({
                type: 'custom',
                message: message,
                duration: duration,
                className: lightOrDarkClassName,
                background: color,
                icon: {
                    className: iconClassName,
                    tagName: 'i'
                }
            });
        }
        else {
            notyf.open({
                type: 'custom',
                message: message,
                className: lightOrDarkClassName,
                background: color,
                icon: {
                    className: iconClassName,
                    tagName: 'i'
                }
            });
        }

    }
    function colourNameToHex(colour) {
        var colours = {
            "aliceblue": "#f0f8ff", "antiquewhite": "#faebd7", "aqua": "#00ffff", "aquamarine": "#7fffd4", "azure": "#f0ffff",
            "beige": "#f5f5dc", "bisque": "#ffe4c4", "black": "#000000", "blanchedalmond": "#ffebcd", "blue": "#0000ff", "blueviolet": "#8a2be2", "brown": "#a52a2a", "burlywood": "#deb887",
            "cadetblue": "#5f9ea0", "chartreuse": "#7fff00", "chocolate": "#d2691e", "coral": "#ff7f50", "cornflowerblue": "#6495ed", "cornsilk": "#fff8dc", "crimson": "#dc143c", "cyan": "#00ffff",
            "darkblue": "#00008b", "darkcyan": "#008b8b", "darkgoldenrod": "#b8860b", "darkgray": "#a9a9a9", "darkgreen": "#006400", "darkkhaki": "#bdb76b", "darkmagenta": "#8b008b", "darkolivegreen": "#556b2f",
            "darkorange": "#ff8c00", "darkorchid": "#9932cc", "darkred": "#8b0000", "darksalmon": "#e9967a", "darkseagreen": "#8fbc8f", "darkslateblue": "#483d8b", "darkslategray": "#2f4f4f", "darkturquoise": "#00ced1",
            "darkviolet": "#9400d3", "deeppink": "#ff1493", "deepskyblue": "#00bfff", "dimgray": "#696969", "dodgerblue": "#1e90ff",
            "firebrick": "#b22222", "floralwhite": "#fffaf0", "forestgreen": "#228b22", "fuchsia": "#ff00ff",
            "gainsboro": "#dcdcdc", "ghostwhite": "#f8f8ff", "gold": "#ffd700", "goldenrod": "#daa520", "gray": "#808080", "green": "#008000", "greenyellow": "#adff2f",
            "honeydew": "#f0fff0", "hotpink": "#ff69b4",
            "indianred ": "#cd5c5c", "indigo": "#4b0082", "ivory": "#fffff0", "khaki": "#f0e68c",
            "lavender": "#e6e6fa", "lavenderblush": "#fff0f5", "lawngreen": "#7cfc00", "lemonchiffon": "#fffacd", "lightblue": "#add8e6", "lightcoral": "#f08080", "lightcyan": "#e0ffff", "lightgoldenrodyellow": "#fafad2",
            "lightgrey": "#d3d3d3", "lightgreen": "#90ee90", "lightpink": "#ffb6c1", "lightsalmon": "#ffa07a", "lightseagreen": "#20b2aa", "lightskyblue": "#87cefa", "lightslategray": "#778899", "lightsteelblue": "#b0c4de",
            "lightyellow": "#ffffe0", "lime": "#00ff00", "limegreen": "#32cd32", "linen": "#faf0e6",
            "magenta": "#ff00ff", "maroon": "#800000", "mediumaquamarine": "#66cdaa", "mediumblue": "#0000cd", "mediumorchid": "#ba55d3", "mediumpurple": "#9370d8", "mediumseagreen": "#3cb371", "mediumslateblue": "#7b68ee",
            "mediumspringgreen": "#00fa9a", "mediumturquoise": "#48d1cc", "mediumvioletred": "#c71585", "midnightblue": "#191970", "mintcream": "#f5fffa", "mistyrose": "#ffe4e1", "moccasin": "#ffe4b5",
            "navajowhite": "#ffdead", "navy": "#000080",
            "oldlace": "#fdf5e6", "olive": "#808000", "olivedrab": "#6b8e23", "orange": "#ffa500", "orangered": "#ff4500", "orchid": "#da70d6",
            "palegoldenrod": "#eee8aa", "palegreen": "#98fb98", "paleturquoise": "#afeeee", "palevioletred": "#d87093", "papayawhip": "#ffefd5", "peachpuff": "#ffdab9", "peru": "#cd853f", "pink": "#ffc0cb", "plum": "#dda0dd", "powderblue": "#b0e0e6", "purple": "#800080",
            "rebeccapurple": "#663399", "red": "#ff0000", "rosybrown": "#bc8f8f", "royalblue": "#4169e1",
            "saddlebrown": "#8b4513", "salmon": "#fa8072", "sandybrown": "#f4a460", "seagreen": "#2e8b57", "seashell": "#fff5ee", "sienna": "#a0522d", "silver": "#c0c0c0", "skyblue": "#87ceeb", "slateblue": "#6a5acd", "slategray": "#708090", "snow": "#fffafa", "springgreen": "#00ff7f", "steelblue": "#4682b4",
            "tan": "#d2b48c", "teal": "#008080", "thistle": "#d8bfd8", "tomato": "#ff6347", "turquoise": "#40e0d0",
            "violet": "#ee82ee",
            "wheat": "#f5deb3", "white": "#ffffff", "whitesmoke": "#f5f5f5",
            "yellow": "#ffff00", "yellowgreen": "#9acd32"
        };

        if (typeof colours[colour.toLowerCase()] != 'undefined')
            return colours[colour.toLowerCase()];

        return false;
    }
    function pickTextColorBasedOnBgColorAdvanced(bgColor) {

        var hexColor = colourNameToHex(bgColor);
        var color = (bgColor.charAt(0) === '#') ? bgColor.substring(1, 7) : hexColor.substring(1, 7);
        var r = parseInt(color.substring(0, 2), 16); // hexToR
        var g = parseInt(color.substring(2, 4), 16); // hexToG
        var b = parseInt(color.substring(4, 6), 16); // hexToB
        var uicolors = [r / 255, g / 255, b / 255];
        var c = uicolors.map((col) => {
            if (col <= 0.03928) {
                return col / 12.92;
            }
            return Math.pow((col + 0.055) / 1.055, 2.4);
        });
        var L = (0.2126 * c[0]) + (0.7152 * c[1]) + (0.0722 * c[2]);
        return (L > 0.179) ? 'text-dark' : 'text-white';
    }
</script>